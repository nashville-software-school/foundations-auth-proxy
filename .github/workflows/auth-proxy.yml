name: Auth Proxy CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'server.js'
      - '.github/workflows/auth-proxy.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./auth-proxy
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/auth-proxy:latest,${{ secrets.DOCKER_REGISTRY }}/auth-proxy:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/auth-proxy:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/auth-proxy:buildcache,mode=max
          build-args: |
            NODE_ENV=production

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: authproxy.nss.team
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create deployment script
            mkdir -p /opt/authproxy

            # Update environment variables
            cat > /opt/authproxy/.env <<EOF
            PORT=3000
            OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}
            OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}
            ALLOWED_ORIGINS=https://nashville-software-school.github.io
            NODE_ENV=production
            EOF

            # Create or update docker-compose.yml
            cat > /opt/authproxy/docker-compose.yml <<EOF
            version: '3'

            services:
              authproxy:
                image: ${{ secrets.DOCKER_REGISTRY }}/auth-proxy:${{ github.sha }}
                ports:
                  - "3000:3000"
                env_file:
                  - .env
                restart: unless-stopped
            EOF

            # Pull and start the container
            cd /opt/authproxy
            docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DO_USERNAME }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            docker pull ${{ secrets.DOCKER_REGISTRY }}/auth-proxy:${{ github.sha }}
            docker-compose down
            docker-compose up -d

            # Clean up old images
            docker image prune -af --filter "until=24h"