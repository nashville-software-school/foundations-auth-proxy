name: Deploy Auth Proxy

on:
  push:
    branches: [ main ]
    paths:
      - 'server.js'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/**'
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm test
        continue-on-error: true  # Since tests may not be implemented yet

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/auth-proxy:latest
            ghcr.io/${{ github.repository_owner }}/auth-proxy:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/auth-proxy:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/auth-proxy:buildcache,mode=max
          build-args: |
            NODE_ENV=production

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create deployment directory and files on droplet
        uses: appleboy/ssh-action@master
        with:
          host: authproxy.nss.team
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /opt/authproxy

      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@master
        with:
          host: authproxy.nss.team
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/authproxy

            # Create or update .env file
            cat > .env << EOF
            PORT=3000
            OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}
            OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}
            ALLOWED_ORIGINS=https://nashville-software-school.github.io
            NODE_ENV=production
            EOF

            # Create or update docker-compose.yml
            cat > docker-compose.yml << EOF
            version: '3'

            services:
              authproxy:
                image: ghcr.io/${{ github.repository_owner }}/auth-proxy:${{ github.sha }}
                ports:
                  - "80:3000"
                env_file:
                  - .env
                restart: unless-stopped
            EOF

            # Log into GitHub Container Registry
            echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Deploy
            docker compose pull
            docker compose up -d

            # Clean up old images
            docker image prune -f

      - name: Notify Slack of Deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: "Auth Proxy deployment ${{ job.status }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()